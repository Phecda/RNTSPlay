{
	// Place your RNTSPlay workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"New Screen": {
		"scope": "typescriptreact",
		"prefix": "isc",
		"description": "Initilize a screen component",
		"body": [
			"import React from 'react';",
			"import { View } from 'react-native';",
			"import {",
			"  NavigationScreenProps,",
			"  NavigationScreenOptions,",
			"} from 'react-navigation';",
			"import commonStyles from '../../variable/styles';",
			"import StyleSheet from '../../utility/StyleSheet';",
			"",
			"interface Props {}",
			"",
			"interface State {}",
			"",
			"export default class ${0:ClassName} extends React.Component<",
			"  Props & NavigationScreenProps,",
			"  State",
			"> {",
			"  static navigationOptions = ({",
			"    navigation,",
			"  }: NavigationScreenProps): NavigationScreenOptions => ({",
			"    title: '${1:title}',",
			"  });",
			"",
			"  render() {",
			"    return <View style={commonStyles.container} />;",
			"  }",
			"}",
			"",
			"const styles = StyleSheet.create({});",
		]
	}
}
